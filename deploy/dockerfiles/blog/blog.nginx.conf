# Log access information in JSON format so that individual fields can
# be queried in Stackdriver.
log_format json_combined escape=json
'{'
'"httpRequest":{'
'"requestMethod":"$request_method",'
'"requestUrl":"$scheme://$host$request_uri",'
'"status":"$status",'
'"responseSize":$bytes_sent,'
'"userAgent":"$http_user_agent",'
'"remoteIp":"$remote_addr",'
'"referer":"$http_referer",'
'"latency":"${request_time}s",'
'"protocol":"$server_protocol"'
'}'
'}';

upstream gcs {
  server storage.googleapis.com:443;
  keepalive 128;
}

upstream auth {
  server localhost:8000;
}

server {
  listen 80 default_server;

  # Redirect HTTP => HTTPS based on header set by GCE load balancer
  # https://cloud.google.com/load-balancing/docs/https/#target-proxies
  #
  # Note: this checks for http instead of for not https to avoid redirecting
  # requests to the readiness check endpoint. Readiness check requests are made by
  # backend service health checks and thus don't have the X-Forwarded headers
  # that requests through the load balancer do. Redirecting readiness check
  # requests would cause health checks to fail (they require a 200 response).
  if ( $http_x_forwarded_proto = "http" ) {
    return 302 https://$host$request_uri;
  }

  access_log /var/log/nginx/access.log json_combined;

  # Use relative URLs for redirects
  # Since requests come in through a load balancer, the host/port
  # known to Nginx is not necessarily the same as what the client
  # connects to
  absolute_redirect off;

  # Set request's remote address to actual client IP
  # The request is forwarded through a GCE load balancer and possibly
  # other GKE nodes before reaching the blog pod
  real_ip_header X-Forwarded-For;
  real_ip_recursive on;

  # Private/internal networks
  set_real_ip_from 127.0.0.1;
  set_real_ip_from 192.168.0.0/24;
  set_real_ip_from 10.0.0.0/8;

  # Internal IPs for GCE load balancers
  # https://cloud.google.com/load-balancing/docs/https#how-connections-work
  set_real_ip_from 35.191.0.0/16;
  set_real_ip_from 130.211.0.0/22;

  # Public IP for ingress load balancer
  set_real_ip_from $INGRESS_IP;

  # Health check endpoints for GCP load balancer
  location = /health/ready {
    access_log off;
    add_header Content-Type text/plain;
    return 200 "ok";
  }

  ############################################################
  # Auth provider
  ############################################################

  location /blog/auth/ {
    expires -1y;
    add_header Pragma "no-cache";

    proxy_set_header Host $host;

    proxy_pass http://auth/;
  }

  ############################################################
  # Pull request previews
  ############################################################

  location /blog/preview/ {
    # Include proxy configuration
    include /etc/nginx/gcs-proxy.conf;

    # Do not cache PR previews
    expires -1y;
    add_header Pragma "no-cache";

    # Add "index.html" to request paths ending in "/"
    rewrite /$ ${uri}index.html;

    # If file is not found, try appending /index.html
    error_page 404 = @blog_preview_slash_index;

    # Proxy requests to GCS
    proxy_pass https://gcs/gnomad-blog/pulls/;
  }

  location @blog_preview_slash_index {
    # Include proxy configuration
    include /etc/nginx/gcs-proxy.conf;

    # Do not cache PR previews
    expires -1y;
    add_header Pragma "no-cache";

    # Remove URL prefix
    rewrite ^/blog/preview(/.*)$ $1 break;

    # Use custom 404 error page
    error_page 404 /blog/404/index.html;

    # Proxy requests to GCS
    proxy_pass https://gcs/gnomad-blog/pulls$uri/index.html;
  }

  ############################################################
  # Main content
  ############################################################
  location /blog/static/ {
    # Include proxy configuration
    include /etc/nginx/gcs-proxy.conf;

    # Cache static content
    # https://www.gatsbyjs.com/docs/caching/
    expires 1w;
    add_header Cache-Control "public, max-age=604800, immutable";

    # Proxy requests to GCS
    proxy_pass https://gcs/gnomad-blog/master/;
  }

  location ~ ^/blog/.*\.(?:css|js)$ {
    # Include proxy configuration
    include /etc/nginx/gcs-proxy.conf;

    # Cache CSS and JavaScript
    # https://www.gatsbyjs.com/docs/caching/
    expires 1w;
    add_header Cache-Control "public, max-age=604800, immutable";

    # Remove URL prefix
    rewrite ^/blog(/.*)$ $1 break;

    # Proxy requests to GCS
    proxy_pass https://gcs/gnomad-blog/master$uri;
  }

  location /blog/ {
    # Include proxy configuration
    include /etc/nginx/gcs-proxy.conf;

    # Do not cache other content
    # https://www.gatsbyjs.com/docs/caching/
    expires -1y;
    add_header Pragma "no-cache";

    # Add "index.html" to request paths ending in "/"
    rewrite /$ ${uri}index.html;

    # If file is not found, try appending /index.html
    error_page 404 = @blog_slash_index;

    # Proxy requests to GCS
    proxy_pass https://gcs/gnomad-blog/master/;
  }

  location @blog_slash_index {
    # Include proxy configuration
    include /etc/nginx/gcs-proxy.conf;

    # Do not cache HTML
    # https://www.gatsbyjs.com/docs/caching/
    expires -1y;
    add_header Pragma "no-cache";

    # Remove URL prefix
    rewrite ^/blog(/.*)$ $1 break;

    # Use custom 404 error page
    error_page 404 /blog/404/index.html;

    # Proxy requests to GCS
    proxy_pass https://gcs/gnomad-blog/master$uri/index.html;
  }
}
